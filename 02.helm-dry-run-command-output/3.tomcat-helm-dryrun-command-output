# helm install tomcat bitnami/tomcat  --dry-run

NAME: tomcat
LAST DEPLOYED: Mon Sep 12 06:53:12 2022
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: tomcat/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tomcat
  namespace: default
  labels:
    app.kubernetes.io/name: tomcat
    helm.sh/chart: tomcat-10.4.3
    app.kubernetes.io/instance: tomcat
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tomcat-password: "MnlYQ1V2N0ZkYw=="
---
# Source: tomcat/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: tomcat
  namespace: default
  labels:
    app.kubernetes.io/name: tomcat
    helm.sh/chart: tomcat-10.4.3
    app.kubernetes.io/instance: tomcat
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: tomcat/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: tomcat
  namespace: default
  labels:
    app.kubernetes.io/name: tomcat
    helm.sh/chart: tomcat-10.4.3
    app.kubernetes.io/instance: tomcat
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: tomcat
    app.kubernetes.io/instance: tomcat
---
# Source: tomcat/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat
  namespace: default
  labels:
    app.kubernetes.io/name: tomcat
    helm.sh/chart: tomcat-10.4.3
    app.kubernetes.io/instance: tomcat
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tomcat
      app.kubernetes.io/instance: tomcat
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tomcat
        helm.sh/chart: tomcat-10.4.3
        app.kubernetes.io/instance: tomcat
        app.kubernetes.io/managed-by: Helm
    spec:

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tomcat
                    app.kubernetes.io/instance: tomcat
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: tomcat
          image: docker.io/bitnami/tomcat:10.0.23-debian-11-r10
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: TOMCAT_USERNAME
              value: "user"
            - name: TOMCAT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tomcat
                  key: tomcat-password
            - name: TOMCAT_ALLOW_REMOTE_MANAGEMENT
              value: "0"
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/tomcat
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: tomcat

NOTES:
CHART NAME: tomcat
CHART VERSION: 10.4.3
APP VERSION: 10.0.23

** Please be patient while the chart is being deployed **

1. Get the Tomcat URL by running:

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace default -w tomcat'

  export SERVICE_IP=$(kubectl get svc --namespace default tomcat --template "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}")
  echo "Tomcat URL:            http://$SERVICE_IP/"
  echo "Tomcat Management URL: http://$SERVICE_IP/manager"

2. Login with the following credentials

  echo Username: user
  echo Password: $(kubectl get secret --namespace default tomcat -o jsonpath="{.data.tomcat-password}" | base64 -d)
